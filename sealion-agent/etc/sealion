#! /bin/sh

### BEGIN INIT INFO
# Provides:          sealion
# Required-Start:    
# Required-Stop:     
# Should-Start:      
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: Sealion agent for 
# Description:       Sealion is cloud based server debugging tool.
#                    This is Sealion's Agent to send monitoring data to Sealion server
# 
### END INIT INFO

LOCK_FILE=/usr/local/sealion-agent/var/sealion/sealion.pid

cd /usr/local/sealion-agent/
if [ $? -ne 0 ] ; then
    exit 1
fi


#
# Function that starts the sealion agent's service
#
do_start()
{
    if [ ! -s $LOCK_FILE ] 
	then
        ./bin/sealion-node index.js start
        RETURN_VALUE=$?
        return $RETURN_VALUE
	else
	    running=`pgrep sealion-node | wc -w`
	    if [ $running -eq 0 ] ; then
	        rm -f $LOCK_FILE
	        if [ $? -eq 0 ] ; then
	            ./bin/sealion-node index.js start
	            RETURN_VALUE=$?
                return $RETURN_VALUE
	        fi
	    fi
	    return 1
	fi
}


#
# Function that returns Sealion agent's status
#
get_status()
{
    running=`pgrep sealion-node | wc -w`
    if [ $running -gt 0 ] ; then
        return 1
    fi

    return 0
}

#
# Function that stops the sealion agent's service
#
do_stop()
{

    if [ -s $LOCK_FILE ]
	then
	    running=`pgrep sealion-node | wc -w`

    	if [ $running -gt 0 ] ; then
    	    ./bin/sealion-node index.js stop
    	    RETURN_VALUE=$?
    	    rm -f $LOCK_FILE
	        return $RETURN_VALUE
    	fi
    	
	    rm -f $LOCK_FILE
	    return 0
	else
	    return 1
	fi
}


case "$1" in
  start)
	do_start
	case "$?" in
		0) 
		    echo "Sealion service started successfully" 
		;;
		1) 
		    echo "Sealion service already running" 
		;;
	esac
	;;
  stop)
	do_stop
	case "$?" in
		0) 
		    echo "Sealion service stopped successfully" 
		;;
		1) 
		    echo "Sealion service not running" 
		;;
	esac
	;;
  restart|force-reload)
	do_stop
	do_start
	case "$?" in
		0)
		    echo "Sealion service restarted successfully"
		;;
		*)
	      echo "Failed to restart Sealion Service"
	    ;;
	esac
    ;;
  status)
    get_status
    case "$?" in
      0)
        echo "Sealion service is not running"
      ;;
      1)
        echo "Sealion service is running"
      ;;
    esac
    ;;
esac
